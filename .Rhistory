if(length(names(index.list[[i]]))==4){
names(index.list[[i]])<-c("Tag",'Name',"Visitor",'index')
index.list[[i]]$Tag<-index.list[[i]]$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
return(index.list)
}
p<-get.index()
jqname_full <- list.cases(p,Name)
jqname <- list.cases(p,Name) %>% str_replace('（4A）|（5A）','') %>%str_replace('）','') %>% str_split('（')
n<-sapply(jqname,length)
for(i in 1:length(jqname)){
if(n[i]>1)
jqname[[i]]<- jqname[[(i)]][2]
else
jqname[[i]]<-jqname[[i]][1]
}
jqname<-unlist(jqname)
jqgeo  <- read.csv('jqgeo0217.csv',stringsAsFactors = FALSE)[,-1]
t<-sapply(jqgeo$keyword,grep,jqname) %>% unlist()
t_number<-as.integer(t)
jq<-data.frame(jqname_full[t_number],keyword)
comfor_posi<-merge(jq,jqgeo,by='keyword',all = F)
keyword<-names(t)
t<-data.frame(keyword=as.character(names(t)),posi=as.character(t))
t[1]
sapply(t,length)
grepl('V1',list.map(x,names(.)))
!grepl('V1',list.map(x,names(.)))
x<-index.table[[!grepl('V1',list.map(x,names(.)))]]
y<-list.filter(x,!grepl('V1',list.map(x,names(.))))
y<-!grepl('V1',list.map(x,names(.)))
z<-list.filter(x,y)
?list.select
x1 <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
list.select(x, type)
x1 <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
list.select(x, type)
list.select(x1, type)
sd<-list.select(x1, type)
View(sd)
str(list.select(x1, type))
z<-list.filter(x,'V1' %in% names(.))
z<-list.filter(x,!'V1' %in% names(.))
index.table<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE)
index.table<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE)
date.series<- paste('2018-02-',c(15:21),sep = '')
date.url<-paste('http://61.155.108.87/jslyzw/front/show/all_show.do?releasenyr=',date.series,'&releasedate=',sep = '')
time.series<-c('9:30','11:30','13:30','15:30')
search.url<-sapply(date.url,paste,time.series,sep='') %>% list()
View(search.url)
search.url<-sapply(date.url,paste,time.series,sep='')
index.table<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE)
index.table<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE)
index.table<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE)
index.table<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE) %>%
list.filter(length(.)>0) %>% list.filter(!'V1' %in% names(.))
str(index.table)
?split
split(index.table)
list.map(index.table,length(.))
list.map(index.table,length(.)) %>% unlist()
length(x)<-3
x<-list()
length(x)<-3
for (i in 1:length(index.data)){
if (length(index.table[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.table[[i-1]],index.table[[i]])
}
}
index.data<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE) %>%
list.filter(length(.)>0) %>% list.filter(!'V1' %in% names(.))
for (i in 1:length(index.data)){
if (length(index.table[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.table[[i-1]],index.table[[i]])
}
}
for (i in 1:length(index.data)){
comfort.index<-list()
if (length(index.table[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.table[[i-1]],index.table[[i]])
}
}
comfort.index<-list()
for (i in 1:length(index.data)){
if (length(index.table[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.table[[i-1]],index.table[[i]])
}
}
str(comfort.index)
View(comfort.index)
?list.order
x <- list(p1 = list(type='A',score=list(c1=10,c2=8)),
p2 = list(type='B',score=list(c1=9,c2=9)),
p3 = list(type='B',score=list(c1=9,c2=7)))
list.order(x, type, (score$c2)) # order by type (ascending) and score$c2 (descending)
list.order(comfort.index,length(.)<4)
list.first(comfort.index,length(.)==0)
list.first(comfort.index,length(.)<4)
list.order(comfort.index,length(.)==0)
comfort.index[[11]]<-index.data[[(11-1)*2+1]]
View(comfort.index)
comfort.index[[11]]<-index.data[[(11-1)*2+1]]
index.data[[(11-1)*2+1]]
comfort.index[[11]]
View(comfort.index)
index.data<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE) %>%
list.filter(length(.)>0) %>% list.filter(!'V1' %in% names(.))
index.data[[21]]
time.matrix<-sapply(date.series,paste,time.series)
View(time.matrix)
comfort.index[[11]]<-time.matrix[((11-1)*2+1)%%4,floor((11-1)*2+1)/4)]
time.matrix[1,3]
comfort.index[[11]]<-time.matrix[(11-1)*2+1)%%4,floor((11-1)*2+1)/4)]
21%%4
comfort.index[[11]]<-time.matrix[((11-1)*2+1))%%4,floor(((11-1)*2+1)/4))]
comfort.index[[11]]<-time.matrix[x%%4,floor(x/4)]
x<-(11-1)*2+1
comfort.index[[11]]<-time.matrix[x%%4,floor(x/4)]
View(comfort.index)
comfort.index[[11]]
View(comfort.index)
str(comfort.index)
comfort.index[[11]]<-time.matrix[11%%4,floor(11/4)]
comfort.index[[11]]
names(comfort.index[[11]])
length(comfort.index[[11]])
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index[[ceiling(i/2)]]$Tag<-comfort.index[[ceiling(i/2)]]$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
View(comfort.index)
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index$Visitor<- as.integer(comfort.index$Visitor)
comfort.index$index  <- substr(comfort.index$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index$Tag    <- comfort.index$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
comfort.index[[11]]<-time.matrix[11%%4,floor(11/4)]
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index$Visitor<- as.integer(comfort.index$Visitor)
comfort.index$index  <- substr(comfort.index$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index$Tag    <- comfort.index$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
index.data<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE) %>%
list.filter(length(.)>0) %>% list.filter(!'V1' %in% names(.))
comfort.index<-list()
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index$Visitor<- as.integer(comfort.index$Visitor)
comfort.index$index  <- substr(comfort.index$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index$Tag    <- comfort.index$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index[[ceiling(i/2)]]$Visitor<- as.integer(comfort.index$Visitor[[ceiling(i/2)]])
comfort.index[[ceiling(i/2)]]$index  <- substr(comfort.index[[ceiling(i/2)]]$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index[[ceiling(i/2)]]$Tag    <- comfort.index[[ceiling(i/2)]]$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index[[ceiling(i/2)]]$Visitor<- as.integer(comfort.index[[ceiling(i/2)]]$Visitor)
comfort.index[[ceiling(i/2)]]$index  <- substr(comfort.index[[ceiling(i/2)]]$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index[[ceiling(i/2)]]$Tag    <- comfort.index[[ceiling(i/2)]]$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
comfort.index[[11]]<-time.matrix[11%%4,floor(11/4)]
comfort.index[[8]]
View(comfort.index)
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index[[ceiling(i/2)]]$Visitor<- as.integer(comfort.index[[ceiling(i/2)]]$Visitor)
comfort.index[[ceiling(i/2)]]$index  <- substr(comfort.index[[ceiling(i/2)]]$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index[[ceiling(i/2)]]$Tag    <- comfort.index[[ceiling(i/2)]]$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
View(comfort.index)
ui<-comfort.index[[12]]%>% list.skip(1) %>% data.frame()
View(ui)
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index[[ceiling(i/2)]]$index  <- substr(comfort.index[[ceiling(i/2)]]$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index[[ceiling(i/2)]]$Tag    <- comfort.index[[ceiling(i/2)]]$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
comfort.index[[11]]<-time.matrix[11%%4,floor(11/4)]
ui<-comfort.index[[12]]%>% list.skip(1) %>% data.frame()
View(ui)
library("XML")
library(xml2)
library("stringr")
library("RCurl")
library("dplyr")
library("rvest")
library(sf)
library(ggplot2)
library(jsonlite)
library(httr)
library(rlist)
library('pipeR')
setwd('C:/Users/zhouq/Documents/R/comfort-index')
date.series<- paste('2018-02-',c(15:21),sep = '')
date.url<-paste('http://61.155.108.87/jslyzw/front/show/all_show.do?releasenyr=',date.series,'&releasedate=',sep = '')
time.series<-c('9:30','11:30','13:30','15:30')
time.matrix<-sapply(date.series,paste,time.series)
search.url<-sapply(date.url,paste,time.series,sep='')
index.data<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE) %>%
list.filter(length(.)>0) %>% list.filter(!'V1' %in% names(.))
comfort.index<-list()
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index[[ceiling(i/2)]]$index  <- substr(comfort.index[[ceiling(i/2)]]$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index[[ceiling(i/2)]]$Tag    <- comfort.index[[ceiling(i/2)]]$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
comfort.index[[11]]<-time.matrix[11%%4,floor(11/4)]
ui<-comfort.index[[12]]%>% list.skip(1) %>% data.frame()
index.content     <- paste(date.url,time[time.diff()],sep='') %>%
getURL(.encoding="utf-8")  %>%
readHTMLTable(stringAsFactors = FALSE)
library("XML")
library(xml2)
library("stringr")
library("RCurl")
library("dplyr")
library("rvest")
library(sf)
library(ggplot2)
library(jsonlite)
library(httr)
library(rlist)
library('pipeR')
library(leaflet)
library(RColorBrewer)
setwd('F:/Administrator/Documents/GitHub/jingqu-comfort-index')
#判断当前时间应提取哪一个时间点的舒适度指数表
time.diff<-function(){
start.time  <- as.POSIXlt(paste(Sys.Date(),'09:30:00 CST'))
diff        <- difftime(Sys.time(),start.time,units='mins') %>% as.data.frame.difftime() %>% as.numeric()
i           <- floor(diff/120)+1
if(i<1)    i<- 1
if(i>4)    i<- 4
return(i)
}
#提取当前时点的舒适度指数表
get.index<-function(){
date.url          <- paste('http://61.155.108.87/jslyzw/front/show/all_show.do?releasenyr=',Sys.Date(),'&releasedate=',sep = '')
time              <- c('9:30','11:30','13:30','15:30')
index.content     <- paste(date.url,time[time.diff()],sep='') %>%
getURL(.encoding="utf-8")  %>%
readHTMLTable(stringAsFactors = FALSE)
index.list        <- list.merge(index.content[[4]],index.content[[5]]) %>% lapply(as.character)
names(index.list) <- c("Tag",'Name',"Visitor",'index')
index.list$Visitor<- as.integer(index.list$Visitor)
index.list$index  <- substr(index.list$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
index.list$Tag    <- index.list$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
return(index.list)
}
#整理舒适度指数表
index.list          <- get.index()
index.data          <- index.list %>% list.skip(1) %>% data.frame()
index.data$Name     <- as.character(index.data$Name)
index.data$Time     <- paste(index.list$Tag[[1]][1],index.list$Tag[[1]][2])
keyword.list        <- index.data$Name %>% str_replace('（4A）|（5A）','') %>%str_replace('）','') %>% str_split('（')
n<-sapply(keyword.list,length)
for(j in 1:length(keyword.list)){
if(n[j]>1)
index.data$keyword[j]<- keyword.list[[j]][2]
else
index.data$keyword[j]<- keyword.list[[j]][1]
}
jqgeo              <- read.csv('jqgeo0217.csv',stringsAsFactors = FALSE)[,c(5,8,9,10,11)]
index.data         <- merge(jqgeo,index.data,by='keyword',all=F)
index.data$keyword <- sapply(jqgeo$keyword,grep,index.data$keyword) %>% unlist() %>% sort() %>% names
pal                <- colorFactor(brewer.pal(11,'RdYlGn')[c(1,4,7,9,11)],domain = c('拥挤','较拥挤','一般','较舒适','舒适'),ordered=TRUE)
index.order        <- factor(c('1','2','3','4','5'),levels=c('拥挤','较拥挤','一般','较舒适','舒适'),ordered=TRUE)
p                  <- leaflet(index.data) %>%
addTiles(
'http://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',
options=tileOptions(tileSize=256, minZoom=7, maxZoom=17, subdomains="1234"),
attribution = '&copy; <a href="http://ditu.amap.com/">高德地图</a>',
group="Road Map") %>%
setView(index.data$lng[1],index.data$lat[1] ,zoom = 10)%>%
addCircles(color=~pal(index.data$index),weight=25,popup=paste(index.data$Name.y,"<br/>",'人数:',index.data$Visitor,"<br/>",index.data$index,sep=''))%>%
addLegend("bottomleft",pal=pal,values=~index,title=paste(index.data$Time[1],'江苏重点景区舒适度'))
p
setwd('F:/Administrator/Documents/GitHub/jingqu-comfort-index')
#判断当前时间应提取哪一个时间点的舒适度指数表
time.diff<-function(){
start.time  <- as.POSIXlt(paste(Sys.Date(),'09:30:00 CST'))
diff        <- difftime(Sys.time(),start.time,units='mins') %>% as.data.frame.difftime() %>% as.numeric()
i           <- floor(diff/120)+1
if(i<1)    i<- 1
if(i>4)    i<- 4
return(i)
}
#提取当前时点的舒适度指数表
get.index<-function(){
date.url          <- paste('http://61.155.108.87/jslyzw/front/show/all_show.do?releasenyr=',Sys.Date(),'&releasedate=',sep = '')
time              <- c('9:30','11:30','13:30','15:30')
index.content     <- paste(date.url,time[time.diff()],sep='') %>%
getURL(.encoding="utf-8")  %>%
readHTMLTable(stringAsFactors = FALSE)
index.list        <- list.merge(index.content[[4]],index.content[[5]]) %>% lapply(as.character)
names(index.list) <- c("Tag",'Name',"Visitor",'index')
index.list$Visitor<- as.integer(index.list$Visitor)
index.list$index  <- substr(index.list$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
index.list$Tag    <- index.list$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
return(index.list)
}
#整理舒适度指数表
index.list          <- get.index()
?rds
saveRDS(comfort.index,'SFCI.rds')
data<-readRDS('SFCI.rds')
View(comfort.index)
ui<-comfort.index[[12]]%>% list.skip(1) %>% data.frame()
View(ui)
View(jqgeo)
#clean data to get location
list.map(comfort.index,Name)
?list.map
View(data)
str(data[[11]])
names(data[[11]])
?data.frame
?as.data.frame
names(data[[12]])
data[[11]]<-as.data.frame(data[[11]],col.names=names(data[[12]]))
View(data)
data[[11]]<-as.data.frame(data[[11]],col.names=names(data[[12]]))
data[[11]]
names(data[[11]])
list.names(data[[11]])
names(data[[11]])
?transform
?rename
names(data[[11]])<-names(data[[12]])
data[[11]]$Tag<-time.matrix[11%%4,floor(11/4)]
View(data)
data[[11]]$Tag
data[[11]]$Tag<-time.matrix[11%%4,floor(11/4)]
library("XML")
library(xml2)
library("stringr")
library("RCurl")
library("dplyr")
library("rvest")
library(sf)
library(ggplot2)
library(jsonlite)
library(httr)
library(rlist)
library('pipeR')
setwd('C:/Users/zhouq/Documents/R/comfort-index')
date.series<- paste('2018-02-',c(15:21),sep = '')
date.url<-paste('http://61.155.108.87/jslyzw/front/show/all_show.do?releasenyr=',date.series,'&releasedate=',sep = '')
time.series<-c('9:30','11:30','13:30','15:30')
time.matrix<-sapply(date.series,paste,time.series)
search.url<-sapply(date.url,paste,time.series,sep='')
index.data<-sapply(search.url,getURL,.encoding='utf-8') %>% readHTMLTable(stringAsFactors = FALSE) %>%
list.filter(length(.)>0) %>% list.filter(!'V1' %in% names(.))
comfort.index<-list()
comfort.index[[11]]$Tag<-time.matrix[11%%4,floor(11/4)]
for (i in 1:length(index.data)){
if (length(index.data[[i]])==3){
comfort.index[[ceiling(i/2)]]<-list.merge(index.data[[i-1]],index.data[[i]])
names(comfort.index[[ceiling(i/2)]])<-c("Tag",'Name',"Visitor",'index')
comfort.index[[ceiling(i/2)]]$index  <- substr(comfort.index[[ceiling(i/2)]]$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
comfort.index[[ceiling(i/2)]]$Tag    <- comfort.index[[ceiling(i/2)]]$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
}
}
comfort.index[[11]]$Tag<-time.matrix[11%%4,floor(11/4)]
View(comfort.index)
data<-comfort.index
data[[11]]
str(data[[11]])
list.count(data[[11]])
#clean data to get location
list.map(data,Name)
list.map(data.Tag)
list.map(data,Tag)
list.count(data[[11]])<-4
names(data[[11]])
names(data[[11]])<-names(data[[12]])
names(data[[11]])<-c('Tag','Name')
data[[11]]<-data.frame(Tag=time.matrix[11%%4,floor(11/4)],Name=NULL,Visitor=NULL,index=NULL)
x<-data.frame(Tag=time.matrix[11%%4,floor(11/4)],Name=NULL,Visitor=NULL,index=NULL)
x=data.frame(v1=1:5,v2=6:10,v3=11:15)
x=data.frame(tag=1:5,v2=6:10,v3=11:15)
View(x)
comfort.index[[11]]<-data.frame()
x=data.frame(tag=1:5,v2=NULL,v3=11:15)
x=data.frame(tag=1:5,v2=NA,v3=11:15)
View(x)
comfort.index[11]]<-data.frame(Tag=time.matrix[11%%4,floor(11/4)],Name=NA,Visitor=NA,index=NA)
comfort.index[[11]] <- data.frame(Tag=time.matrix[11%%4,floor(11/4)],Name=NA,Visitor=NA,index=NA)
View(comfort.index)
View(comfort.index)
names(comfort.index)
names(comfort.index[[11]])
data<-comfort.index
#clean data to get location
list.map(data,Name)
list.map(data,Name) %>% list.apply(str_replace,'（4A）|（5A）','')
x<-list.map(data,Name) %>% list.apply(str_replace,'（4A）|（5A）','') %>% list.apply(str_replace,'）','') %>% list.apply(str_split,'（')
View(x)
source('~/GitHub/jingqu-comfort-index/comfort_all.R')
library(sf)
canal<-st_read('F:/Administrator/Documents/R/Mapproject/运河资源点/运河资源点.shp')
plot(canal)
library(ggplo2)
library(ggplot2)
ggplot(sf)+geom_sf()
View(canal)
library("XML")
library(xml2)
library("stringr")
library("RCurl")
library("dplyr")
library("rvest")
library(sf)
library(ggplot2)
library(jsonlite)
library(httr)
library(rlist)
library('pipeR')
library(leaflet)
library(RColorBrewer)
setwd('F:/Administrator/Documents/GitHub/jingqu-comfort-index')
#判断当前时间应提取哪一个时间点的舒适度指数表
time.diff<-function(){
start.time  <- as.POSIXlt(paste(Sys.Date(),'09:30:00 CST'))
diff        <- difftime(Sys.time(),start.time,units='mins') %>% as.data.frame.difftime() %>% as.numeric()
i           <- floor(diff/120)+1
if(i<1)    i<- 1
if(i>4)    i<- 4
return(i)
}
#提取当前时点的舒适度指数表
get.index<-function(){
date.url          <- paste('http://61.155.108.87/jslyzw/front/show/all_show.do?releasenyr=',Sys.Date(),'&releasedate=',sep = '')
time              <- c('9:30','11:30','13:30','15:30')
index.content     <- paste(date.url,time[time.diff()],sep='') %>%
getURL(.encoding="utf-8")  %>%
readHTMLTable(stringAsFactors = FALSE)
index.list        <- list.merge(index.content[[4]],index.content[[5]]) %>% lapply(as.character)
names(index.list) <- c("Tag",'Name',"Visitor",'index')
index.list$Visitor<- as.integer(index.list$Visitor)
index.list$index  <- substr(index.list$index,1,1) %>% factor(levels=c('5','4','3','2','1'),labels=c('舒适','较舒适','一般','较拥挤','拥挤'))
index.list$Tag    <- index.list$Tag %>% str_replace('发布时间：','') %>% strsplit('\\s')
return(index.list)
}
#整理舒适度指数表
index.list          <- get.index()
index.data          <- index.list %>% list.skip(1) %>% data.frame()
index.data$Name     <- as.character(index.data$Name)
index.data$Time     <- paste(index.list$Tag[[1]][1],index.list$Tag[[1]][2])
keyword.list        <- index.data$Name %>% str_replace('（4A）|（5A）','') %>%str_replace('）','') %>% str_split('（')
n<-sapply(keyword.list,length)
for(j in 1:length(keyword.list)){
if(n[j]>1)
index.data$keyword[j]<- keyword.list[[j]][2]
else
index.data$keyword[j]<- keyword.list[[j]][1]
}
jqgeo              <- read.csv('jqgeo0217.csv',stringsAsFactors = FALSE)[,c(5,8,9,10,11)]
index.data$keyword <- sapply(jqgeo$keyword,grep,index.data$keyword) %>% unlist() %>% sort() %>% names
index.data         <- merge(jqgeo,index.data,by='keyword',all=F)
pal                <- colorFactor(brewer.pal(11,'RdYlGn')[c(1,4,7,9,11)],domain = c('拥挤','较拥挤','一般','较舒适','舒适'),ordered=TRUE)
index.order        <- factor(c('1','2','3','4','5'),levels=c('拥挤','较拥挤','一般','较舒适','舒适'),ordered=TRUE)
p                  <- leaflet(index.data) %>%
addTiles(
'http://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}',
options=tileOptions(tileSize=256, minZoom=7, maxZoom=17, subdomains="1234"),
attribution = '&copy; <a href="http://ditu.amap.com/">高德地图</a>',
group="Road Map") %>%
setView(index.data$lng[1],index.data$lat[1] ,zoom = 10)%>%
addCircles(color=~pal(index.data$index),weight=25,popup=paste(index.data$Name.y,"<br/>",'人数:',index.data$Visitor,"<br/>",index.data$index,sep=''))%>%
addLegend("bottomleft",pal=pal,values=~index,title=paste(index.data$Time[1],'江苏重点景区舒适度'))
p
data.url
date.url
SFCI <- readRDS("F:/Administrator/Documents/GitHub/jingqu-comfort-index/SFCI.rds")
